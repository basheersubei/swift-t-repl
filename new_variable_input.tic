
# Generated by stc version 0.6.0
# date                    : 2015/07/09 15:03:27
# Turbine version         : 0.6.0
# Input filename          : /home/ubuntu/swift-t-testing/misc/integer.swift
# Output filename         : /home/ubuntu/swift-t-testing/misc
# STC home                : /usr/bin/swift-t/stc
# Turbine home            : /usr/bin/swift-t/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : integer.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : false
# stc.opt.array-build           : false
# stc.opt.batch-refcounts       : false
# stc.opt.cancel-refcounts      : false
# stc.opt.constant-fold         : false
# stc.opt.controlflow-fusion    : false
# stc.opt.dataflow-op-inline    : false
# stc.opt.dead-code-elim        : false
# stc.opt.demote-globals        : false
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : false
# stc.opt.flatten-nested        : false
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : false
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : false
# stc.opt.hoist                 : false
# stc.opt.hoist-refcounts       : false
# stc.opt.loop-simplify         : false
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : false
# stc.opt.piggyback-refcounts   : false
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : false
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : false
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : false
# stc.opt.value-number          : false
# stc.opt.wait-coalesce         : false
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /usr/bin/swift-t/stc
# stc.turbine.version           : 0.6.0
# stc.turbine_home              : /usr/bin/swift-t/turbine
# stc.version                   : 0.6.0

# Metadata:

package require turbine 0.6.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "enter function: __entry"
    # Var: int u:x integer.swift:1:0
    global u:x
    # Var: string u:SOFT /usr/bin/swift-t/turbine/export/builtins.swift:36:0
    global u:SOFT
    # Var: string u:HARD /usr/bin/swift-t/turbine/export/builtins.swift:35:0
    global u:HARD
    # Var: string u:NODE /usr/bin/swift-t/turbine/export/builtins.swift:39:0
    global u:NODE
    # Var: string u:RANK /usr/bin/swift-t/turbine/export/builtins.swift:38:0
    global u:RANK
    # Var: string t:1 EXPR_TEMPORARY /usr/bin/swift-t/turbine/export/builtins.swift:35:45
    # Var: string t:2 EXPR_TEMPORARY /usr/bin/swift-t/turbine/export/builtins.swift:36:45
    # Var: string t:3 EXPR_TEMPORARY /usr/bin/swift-t/turbine/export/builtins.swift:38:41
    # Var: string t:4 EXPR_TEMPORARY /usr/bin/swift-t/turbine/export/builtins.swift:39:41
    
    # multicreate returns a list of newly created ids. So here, the ids for the new variables are assigned to the variable names t:1 t:2 etc.
    lassign [ adlb::multicreate [ list string 1 1 1 ] [ list string 1 1 2 ] [ list string 1 1 3 ] [ list string 1 1 4 ] ] t:1 t:2 t:3 t:4
    turbine::c::log "allocated t:1=<${t:1}> t:2=<${t:2}> t:3=<${t:3}> t:4=<${t:4}>"
    turbine::store_string ${t:1} "HARD"
    turbine::read_refcount_incr ${t:1} 1
    turbine::rule [ list ${t:1} ] "copy-__t:1_HARD ${t:1} ${u:HARD}"
    turbine::store_string ${t:2} "SOFT"
    turbine::read_refcount_incr ${t:2} 1
    turbine::rule [ list ${t:2} ] "copy-__t:2_SOFT ${t:2} ${u:SOFT}"
    turbine::store_string ${t:3} "RANK"
    turbine::read_refcount_incr ${t:3} 1
    turbine::rule [ list ${t:3} ] "copy-__t:3_RANK ${t:3} ${u:RANK}"
    turbine::store_string ${t:4} "NODE"
    turbine::read_refcount_incr ${t:4} 1
    turbine::rule [ list ${t:4} ] "copy-__t:4_NODE ${t:4} ${u:NODE}"
    turbine::store_integer ${u:x} 77

    puts "Welcome to the extremely basic REPL turbine engine!"

    puts "Please enter a value for a new integer variable:"
    set y [gets stdin]
    puts "You entered $y"
    
    global u:y
    set u:y [ adlb::create $adlb::NULL_ID integer ]
    turbine::store_integer ${u:y} $y

    puts "A new integer named y has been created with id ${u:y} and value $y"

    turbine::read_refcount_decr ${t:2} 1
    turbine::read_refcount_decr ${t:1} 1
    turbine::read_refcount_decr ${t:4} 1
    turbine::read_refcount_decr ${t:3} 1
}


proc copy-__t:1_HARD { t:1 u:HARD } {
    set tcltmp:retrieved [ adlb::acquire_ref ${t:1} string 0 1 ]
    adlb::store ${u:HARD} string ${tcltmp:retrieved} 1
}


proc copy-__t:2_SOFT { t:2 u:SOFT } {
    set tcltmp:retrieved [ adlb::acquire_ref ${t:2} string 0 1 ]
    adlb::store ${u:SOFT} string ${tcltmp:retrieved} 1
}


proc copy-__t:3_RANK { t:3 u:RANK } {
    set tcltmp:retrieved [ adlb::acquire_ref ${t:3} string 0 1 ]
    adlb::store ${u:RANK} string ${tcltmp:retrieved} 1
}


proc copy-__t:4_NODE { t:4 u:NODE } {
    set tcltmp:retrieved [ adlb::acquire_ref ${t:4} string 0 1 ]
    adlb::store ${u:NODE} string ${tcltmp:retrieved} 1
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
lassign [ adlb::create_globals [ list string 1 1 5 ] [ list string 1 1 6 ] [ list string 1 1 7 ] [ list string 1 1 8 ] [ list integer 1 1 9 ] ] u:HARD u:SOFT u:RANK u:NODE u:x
adlb::add_debug_symbol 1 "__t:1" "builtins:35:45"
adlb::add_debug_symbol 2 "__t:2" "builtins:36:45"
adlb::add_debug_symbol 3 "__t:3" "builtins:38:41"
adlb::add_debug_symbol 4 "__t:4" "builtins:39:41"
adlb::add_debug_symbol 5 "HARD" "builtins:35:0"
adlb::add_debug_symbol 6 "SOFT" "builtins:36:0"
adlb::add_debug_symbol 7 "RANK" "builtins:38:0"
adlb::add_debug_symbol 8 "NODE" "builtins:39:0"
adlb::add_debug_symbol 9 "x" "integer:1:0"
turbine::start swift:main swift:constants
turbine::finalize
